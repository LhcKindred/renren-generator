package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.Map;


import cn.stylefeng.roses.kernel.model.response.ResponseData;
import cn.stylefeng.roses.kernel.scanner.modular.annotation.PostResource;
import cn.stylefeng.roses.kernel.scanner.modular.stereotype.ApiResource;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.cncec.pms.core.valid.UpdateGroup;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import lombok.AllArgsConstructor;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;

import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;


/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@AllArgsConstructor
@Api(tags = "${comments}")
@ApiResource(name = "${comments}Controller", path = "/${pathName}")
public class ${className}Controller {

    private final ${className}Service ${classname}Service;

    @GetResource(name = "分页", path = "listPage")
    @ApiImplicitParams({
            @ApiImplicitParam(paramType = "query", name = "pageSize", dataType = "Long", value = "每页条数"),
            @ApiImplicitParam(paramType = "query", name = "pageNo", dataType = "Long", value = "页码")
    })
    @ApiOperation(value = "分页接口", response = ${className}.class)
    public ResponseData listPage(${className} ${classname}) {
        Page<${className}> resultPage = ${classname}Service.listPage(${classname});

        return ResponseData.success(resultPage);
    }

    @ApiOperation(value = "详情接口", response = ${className}.class)
    @GetResource(name = "详情", path = "/info/{${pk.attrname}}")
    public ResponseData info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}) {
        ${className} ${classname} =${classname}Service.getById(${pk.attrname});

        return ResponseData.success(${classname});
    }

   #* @ApiOperation(value = "新增接口")
    @PostResource(name = "新增", path = "/save")
    public ResponseData save(@Validated(AddGroup.class) @RequestBody ${className} ${classname}) {
            ${classname}Service.add(${classname});

        return ResponseData.success();
    }*#

    @ApiOperation(value = "暂存接口")
    @PostResource(name = "暂存", path = "/tmpSave")
    public ResponseData saveTmp( @RequestBody ${className} ${classname}) {
            ${classname}Service.saveTmp(${classname});

        return ResponseData.success();
    }
#*
    @ApiOperation(value = "修改")
    @PostResource(name = "修改", path = "/update")
    public ResponseData update(@Validated(UpdateGroup.class) @RequestBody ${className} ${classname}) {
            ${classname}Service.updateInfo(${classname});

        return ResponseData.success();
    }*#

    @ApiOperation(value = "删除")
    @PostResource(name = "删除", path = "/delete")
    public ResponseData delete(@RequestParam ${pk.attrType} ${pk.attrname}) {
            ${classname}Service.delete(${pk.attrname});

        return ResponseData.success();
    }

}
